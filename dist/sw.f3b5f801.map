{"version":3,"sources":["../sw.js"],"names":["cacheName","filesToCache","self","addEventListener","e","waitUntil","caches","open","then","cache","addAll","keys","keyList","Promise","all","map","key","delete","clients","claim","request","method","navigator","onLine","Error","respondWith","match","response","fetch"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,SAAS,GAAG,UAAhB;AAEA,IAAIC,YAAY,GAAG,EAAnB;AAIAC,IAAI,CAACC,gBAAL,CAAsB,SAAtB,EAAiC,UAACC,CAAD,EAAO;AACtCA,EAAAA,CAAC,CAACC,SAAF,CACEC,MAAM,CAACC,IAAP,CAAYP,SAAZ,EAAuBQ,IAAvB,CAA4B,UAAAC,KAAK;AAAA,WAAIA,KAAK,CAACC,MAAN,CAAaT,YAAb,CAAJ;AAAA,GAAjC,CADF;AAGD,CAJD;AAMAC,IAAI,CAACC,gBAAL,CAAsB,UAAtB,EAAkC,UAACC,CAAD,EAAO;AACvCA,EAAAA,CAAC,CAACC,SAAF,CACEC,MAAM,CAACK,IAAP,GAAcH,IAAd,CAAmB,UAAAI,OAAO;AAAA,WAAIC,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAAR,CAAY,UAACC,GAAD,EAAS;AAC7D,UAAIA,GAAG,KAAKhB,SAAZ,EAAuB;AACrB,eAAOM,MAAM,CAACW,MAAP,CAAcD,GAAd,CAAP;AACD;AACF,KAJyC,CAAZ,CAAJ;AAAA,GAA1B,CADF;AAOA,SAAOd,IAAI,CAACgB,OAAL,CAAaC,KAAb,EAAP;AACD,CATD;AAWAjB,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,UAACC,CAAD,EAAO;AACpC,MAAI,CAACA,CAAC,CAACgB,OAAF,CAAUC,MAAV,KAAqB,KAArB,IAA8BjB,CAAC,CAACgB,OAAF,CAAUC,MAAV,KAAqB,MAApD,KAA+D,UAAUC,SAAS,CAACC,MAAvF,EAA+F;AAC7F,QAAIC,KAAJ,CAAU,2BAAV;AACD,GAFD,MAEOpB,CAAC,CAACqB,WAAF,CACLnB,MAAM,CAACoB,KAAP,CAAatB,CAAC,CAACgB,OAAf,EAAwBZ,IAAxB,CAA6B,UAAAmB,QAAQ;AAAA,WAAIA,QAAQ,IAAIC,KAAK,CAACxB,CAAC,CAACgB,OAAH,CAArB;AAAA,GAArC,CADK;AAGR,CAND","file":"sw.f3b5f801.map","sourceRoot":"..\\site","sourcesContent":["let cacheName = 'pl-cache';\r\n\r\nlet filesToCache = [\r\n\r\n];\r\n\r\nself.addEventListener('install', (e) => {\r\n  e.waitUntil(\r\n    caches.open(cacheName).then(cache => cache.addAll(filesToCache))\r\n  );\r\n});\r\n\r\nself.addEventListener('activate', (e) => {\r\n  e.waitUntil(\r\n    caches.keys().then(keyList => Promise.all(keyList.map((key) => {\r\n      if (key !== cacheName) {\r\n        return caches.delete(key);\r\n      }\r\n    })))\r\n  );\r\n  return self.clients.claim();\r\n});\r\n\r\nself.addEventListener('fetch', (e) => {\r\n  if ((e.request.method === \"PUT\" || e.request.method === \"POST\") && false === navigator.onLine) {\r\n    new Error('No internet connectivity!');\r\n  } else e.respondWith(\r\n    caches.match(e.request).then(response => response || fetch(e.request))\r\n  );\r\n});"]}